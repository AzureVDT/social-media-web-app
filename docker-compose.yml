# docker-compose.yml
version: "3.8"

services:
    proxy:
        image: nginx:latest
        container_name: nginx-con
        ports:
            - "80:80"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        networks:
            - backend
        depends_on:
            - service-registry
        deploy:
            resources:
                limits:
                    cpus: "0.25"
                    memory: 256M
                reservations:
                    memory: 128M

    mysql:
        image: mysql:latest
        container_name: db-mysql-con
        restart: always
        environment:
            - MYSQL_USER=admin
            - MYSQL_PASSWORD=123456
            - MYSQL_ROOT_PASSWORD=123456
        volumes:
            - mysql-data:/var/lib/mysql
            - ./database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
        ports:
            - "3306:3306"
        networks:
            - db-mysql-net
        deploy:
            resources:
                limits:
                    cpus: "0.50"
                    memory: 512M
                reservations:
                    memory: 256M

    adminer:
        image: adminer
        container_name: adminer-con
        restart: always
        ports:
            - "8080:8080"
        networks:
            - db-mysql-net
        deploy:
            resources:
                limits:
                    cpus: "0.25"
                    memory: 256M
                reservations:
                    memory: 128M

    mongodb:
        image: mongo:latest
        container_name: db-mongodb-con
        restart: always
        ports:
            - "27017:27017"
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=123456
        volumes:
            - mongodb-data:/data/db
            - ./database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
        networks:
            - db-mongodb-net

    mongo-express:
        image: mongo-express
        restart: always
        ports:
            - 8081:8081
        environment:
            - ME_CONFIG_MONGODB_SERVER=mongodb
            - ME_CONFIG_MONGODB_ADMINUSERNAME=root
            - ME_CONFIG_MONGODB_ADMINPASSWORD=123456
        networks:
            - db-mongodb-net
        deploy:
            resources:
                limits:
                    cpus: "0.25"
                    memory: 256M
                reservations:
                    memory: 128M

    zipkin:
        image: openzipkin/zipkin
        container_name: zipkin-con
        restart: always
        ports:
            - "9411:9411"
        networks:
            - backend
        deploy:
            resources:
                limits:
                    cpus: "0.25"
                    memory: 256M
                reservations:
                    memory: 128M

    redis:
        image: redis:latest
        restart: always
        ports:
            - "6379:6379"
        environment:
            - REDIS_PASSWORD=123456
            - REDIS_PORT=6379
            - REDIS_DATABASES=16
        networks:
            - db-redis-net
        deploy:
            resources:
                limits:
                    cpus: "0.25"
                    memory: 256M
                reservations:
                    memory: 128M

    rabbitmq:
        image: rabbitmq:management
        container_name: rabbitmq-con
        restart: always
        ports:
            - "5672:5672"
            - "15672:15672"
        environment:
            - RABBITMQ_DEFAULT_USER=admin
            - RABBITMQ_DEFAULT_PASS=123456
        networks:
            - rabbitmq-net
        deploy:
            resources:
                limits:
                    cpus: "0.50"
                    memory: 512M
                reservations:
                    memory: 256M

    service-registry:
        image: laminhtam/social-media-service-registry:latest
        ports:
            - "8761:8761"
        networks:
            - backend
        deploy:
            resources:
                limits:
                    cpus: "0.25"
                    memory: 256M
                reservations:
                    memory: 128M

    config-server:
        image: laminhtam/social-media-config-server:latest
        container_name: config-server-con
        ports:
            - "8888:8888"
        environment:
            - SPRING_PROFILES_ACTIVE=native
            - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
        volumes:
            - ./UniEnrollSystemBE/config-server:/config
        networks:
            - backend
        deploy:
            resources:
                limits:
                    cpus: "0.25"
                    memory: 256M
                reservations:
                    memory: 128M

    gateway:
        image: laminhtam/social-media-gateway:latest
        container_name: gateway-con
        restart: always
        ports:
            - "8060:8060"
        environment:
            - CONFIG_SERVER_URL=http://config-server:8888
            - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
            - SPRING_DATA_REDIS_DATABASE=0
            - SPRING_DATA_REDIS_HOST=redis
            - SPRING_DATA_REDIS_PORT=6379
            - SPRING_DATA_REDIS_TIMEOUT=60000
            - SPRING_DATA_REDIS_PASSWORD=123456
        volumes:
            - ./UniEnrollSystemBE/api-gateway:/config
        networks:
            - backend
            - db-redis-net
        depends_on:
            - service-registry
            - config-server
            - redis
        deploy:
            resources:
                limits:
                    cpus: "0.50"
                    memory: 512M
                reservations:
                    memory: 256M

    auth-service:
        image: laminhtam/social-media-auth-service:latest
        restart: always
        ports:
            - "9004:9004"
        environment:
            - CONFIG_SERVER_URL=http://config-server:8888
            - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
            - SPRING_APPLICATION_NAME=auth-service
            - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/auth_db
            - SPRING_DATASOURCE_USERNAME=root
            - SPRING_DATASOURCE_PASSWORD=123456
            - SPRING_JPA_HIBERNATE_DDL_AUTO=update
            - SPRING_JPA_SHOW_SQL=false
            - JWT_SECRET=4d5a23bd0646523b4aaae7a51a92a62babcb4eb353843a3fa4ef4ef05f534a68
            - JWT_EXPIRATION=86400
            - SPRING_DATA_REDIS_DATABASE=0
            - SPRING_DATA_REDIS_HOST=redis
            - SPRING_DATA_REDIS_PORT=6379
            - SPRING_DATA_REDIS_TIMEOUT=60000
            - SPRING_DATA_REDIS_PASSWORD=123456
        volumes:
            - ./UniEnrollSystemBE/auth-service:/config
        depends_on:
            - service-registry
            - config-server
            - gateway
            - mysql
            - redis
        networks:
            - backend
            - db-mysql-net
            - db-redis-net
        deploy:
            resources:
                limits:
                    cpus: "0.50"
                    memory: 512M
                reservations:
                    memory: 256M

volumes:
    mysql-data:
    mongodb-data:

networks:
    db-mysql-net:
    db-mongodb-net:
    backend:
    db-redis-net:
    rabbitmq-net:
